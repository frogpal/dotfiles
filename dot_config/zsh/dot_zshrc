setopt APPEND_HISTORY
setopt SHARE_HISTORY
setopt HIST_IGNORE_SPACE
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_VERIFY
setopt HIST_REDUCE_BLANKS
setopt HIST_FIND_NO_DUPS

autoload -U colors && colors
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors '${(s.:.)LS_COLORS}'
zstyle ':completion:*:descriptions' format '[%d]'
zstyle ':completion:*:warnings' format ' %F{red}-- no matches found --%f'

zstyle ':completion:*:git-checkout:*' sort false
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color=always $realpath'
zstyle ':fzf-tab:*' use-fzf-default-opts yes

# Make word movement behave like text editors
autoload -U select-word-style
select-word-style bash

# Key bindings
bindkey "^[[A" history-search-backward
bindkey "^[[B" history-search-forward
bindkey "^P" history-search-backward
bindkey "^N" history-search-forward
bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word
bindkey "^[[3~" delete-char # delete characters using the "delete" key
bindkey "^C" autosuggest-clear # CTRL+C
bindkey '^ ' autosuggest-accept # CTRL+Space
bindkey -v
bindkey -M vicmd ':' undefined-key # Disable confusing execute mode

# PATH management
typeset -U PATH  # Remove duplicates from PATH

# Aliases
alias get-music="yt-dlp -x -f bestaudio --audio-format mp3 --embed-thumbnail"
alias ls='ls --color=auto'

# Add completions to fpath

if [[ -d "$ZSH_PLUGINS_DIR/zsh-completions" ]]; then
    fpath=("$ZSH_PLUGINS_DIR/zsh-completions" $fpath)
fi

# Initialize completions
autoload -Uz compinit
compinit
# Only run compinit once per day for better performance
# if [[ -n ${ZDOTDIR}/.zcompdump(#qN.mh-24) ]]; then
#     compinit -C
# else
#     compinit
# fi

plugins=(
    "zsh-autosuggestions.zsh"
    "zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
    "colored-man-pages.plugin.zsh"
    "fzf-tab/fzf-tab.plugin.zsh"
    "catppuccin-fzf-mocha.sh"
)

for plugin in "${plugins[@]}"; do
    plugin_path="$ZSH_PLUGINS_DIR/$plugin"
    [[ -r "$plugin_path" ]] && source "$plugin_path"
done

if command -v fzf &> /dev/null; then
    source <(fzf --zsh)
fi

# Thanks https://github.com/starship/starship/issues/3418#issuecomment-2477375663
if [[ "${widgets[zle-keymap-select]#user:}" == "starship_zle-keymap-select" || \
      "${widgets[zle-keymap-select]#user:}" == "starship_zle-keymap-select-wrapped" ]]; then
    zle -N zle-keymap-select "";
fi

if command -v starship &> /dev/null; then
    export STARSHIP_CONFIG=$XDG_CONFIG_HOME/starship/starship.toml
    eval "$(starship init zsh)"
fi


# Start the ssh-agent if not already running
# if ! pgrep -u "$USER" ssh-agent > /dev/null; then
#     echo "running ssh agent"
#     eval "$(ssh-agent -s)" > /dev/null
# else 
#     echo "nope, couldn't add ssh agent"
# fi

# Load SSH key if it exists and is not already loaded
# SSH_KEY="$HOME/.ssh/id_ed25519"
#
# if [[ -f "$SSH_KEY" ]]; then
#     if ! ssh-add -l | grep -q "$SSH_KEY"; then
#         ssh-add "$SSH_KEY" > /dev/null 2>&1
#     fi
# fi

# Autocomplete pipx commands
eval "$(register-python-argcomplete pipx)"

# bun completions
[ -s "/home/mogus/.bun/_bun" ] && source "/home/mogus/.bun/_bun"
. "/home/mogus/.deno/env"
